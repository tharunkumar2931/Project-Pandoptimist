version: '2'
services:
  spring-cloud-gateway:
    build: spring-cloud-gateway/
    container_name: spring-cloud-gateway
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
     - 8080:8080

  webapp:
    build: webapp/
    image: webapp
    restart: always
    container_name: webapp
    network_mode: "host"
    hostname: localhost
    ports:
      - "4200:4200"

  eureka-server:
    build: eureka-server/
    container_name: eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8761:8761

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - $HOME/data/db:/data/db
    ports:
      - 27017:27017

  prometheus:
    container_name: prom
    image: prom/prometheus
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    container_name: graf
    image: grafana/grafana
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 3000:3000

  kibana:
    image: kibana:7.6.2
    links:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    restart: always

  logstash:
    image: logstash:7.10.1
    environment:
      - STDOUT=true
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - kibana
    command: 'logstash -e "input { udp { port => 5000 } } output { elasticsearch { hosts =>     elasticsearch } }"'
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
#    volumes:
#      - ./data/elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    restart: always


  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    network_mode: "host"
    hostname: localhost
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user
      MYSQL_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - $HOME/data/datasql:/var/lib/mysql
    ports:
      - 3306:3306

  neo4j:
    image: neo4j:4.2.3
    container_name: neo4j
    restart: always
    ports:
      - 7474:7474
      - 7687:7687
    network_mode: "host"
    volumes:
      - ./neo4j/data:/data
    environment:
      - NEO4J_AUTH=neo4j/neo4j123

  database_redis:
    image: redis:latest
    container_name: redis_container
    hostname: localhost
    network_mode: "host"
    restart: always
    ports:
        - 6379:6379
    volumes:
        - ./redis/data:/data

  
  rabbitmq:
    image: rabbitmq:3.7.5-management
    hostname: localhost
    network_mode: "host"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - $HOME/data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST:

  user-management-service:
    build: user-management-service/
    container_name: user-management-service
    restart: always
    depends_on:
      - mysql
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 8089:8089

  otp-service:
    build: otp-service/
    container_name: otp-service
    restart: always
    depends_on:
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 8081:8081

  doctor-consultation-service:
    build: doctor-consultation-service/
    container_name: doctor-consultation-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 8082:8082

  donor-service:
    build: donor-service/
    container_name: donor-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 8083:8083

  medical-service:
    build: medical-request-service/
    container_name: medical-request-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 9091:9091


  war-room-service:
    build: war-room-service/
    container_name: war-room-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 9095:9095

  chat-service:
    build: chat-service/
    container_name: chat-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 8095:8095

  volunteer-service:
    build: volunteer-service/
    container_name: volunteer-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 8084:8084

  patient-service:
    build: patient-service/
    container_name: patient-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 8085:8085

  graph-service:
    build: graph-service/
    container_name: graph-service
    restart: always
    depends_on:
      - neo4j
      - rabbitmq
      - eureka-server
    network_mode: "host"
    hostname: localhost
    ports:
      - 8086:8086
